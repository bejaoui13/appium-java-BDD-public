<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-TA2JTMN" failures="0" tests="3" name="com.tescase.LoginTest" time="15.092" errors="1" timestamp="2024-10-25T11:16:50 CET" skipped="2">
  <testcase classname="com.tescase.LoginTest" name="setDriver" time="15.092">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up 
Host info: host: &#039;DESKTOP-TA2JTMN&#039;, ip: &#039;192.168.31.192&#039;
Build info: version: &#039;4.25.0&#039;, revision: &#039;8a8aea2337&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.11&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {app: C:\Users\user\eclipseworksp..., automationName: uiAutomator2, deviceName: smart7px, newCommandTimeout: 600, platformName: ANDROID, platformVersion: 15}, capabilities=[{appium:newCommandTimeout=600, appium:platformVersion=15, appium:app=C:\Users\user\eclipseworkspace\UXrinQA\app\application-custumrah.apk, platformName=ANDROID, appium:automationName=uiAutomator2, appium:deviceName=smart7px}]}]
Capabilities {app: C:\Users\user\eclipseworksp..., automationName: uiAutomator2, deviceName: smart7px, newCommandTimeout: 600, platformName: ANDROID, platformVersion: 15}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up 
Host info: host: 'DESKTOP-TA2JTMN', ip: '192.168.31.192'
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {app: C:\Users\user\eclipseworksp..., automationName: uiAutomator2, deviceName: smart7px, newCommandTimeout: 600, platformName: ANDROID, platformVersion: 15}, capabilities=[{appium:newCommandTimeout=600, appium:platformVersion=15, appium:app=C:\Users\user\eclipseworkspace\UXrinQA\app\application-custumrah.apk, platformName=ANDROID, appium:automationName=uiAutomator2, appium:deviceName=smart7px}]}]
Capabilities {app: C:\Users\user\eclipseworksp..., automationName: uiAutomator2, deviceName: smart7px, newCommandTimeout: 600, platformName: ANDROID, platformVersion: 15}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at com.base.BaseDeTest.initialiserDriver(BaseDeTest.java:35)
at com.tescase.LoginTest.setDriver(LoginTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- setDriver -->
  <system-out/>
  <testcase classname="com.tescase.LoginTest" name="testFailedLogin" time="0.000">
    <skipped/>
  </testcase> <!-- testFailedLogin -->
  <system-out/>
  <testcase classname="com.tescase.LoginTest" name="testSuccesLogin" time="0.000">
    <skipped/>
  </testcase> <!-- testSuccesLogin -->
  <system-out/>
</testsuite> <!-- com.tescase.LoginTest -->
